package supsoluti;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.ClipboardOwner;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultTreeCellRenderer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author brenno.lima
 */
public class T_atendimento extends javax.swing.JInternalFrame {

    /**
     * Creates new form T_atendimento
     */
    public T_atendimento() {
        initComponents();
        URL CaminhoIcone = getClass().getResource("/supsoluti/marca_Soluti_20x20px3.png");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(CaminhoIcone);
        // this.setIconImage(iconeTitulo);
        jTextPane1.setText("\n"
                + "\n"
                + "\n A MÁSCARA DE ATENDIMENTO PODE SER ALTERADA DE ACORDO COM O SUA NECESSIDADE.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabelobs = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Atendimento");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(878, 452));

        jTree1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Instalação de Driver");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Cartão");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Token");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Emissão do Certificado");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Certificado A1");
        javax.swing.tree.DefaultMutableTreeNode treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Cliente A1");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Contabilidade");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Certificado A3");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Cliente A3");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Certificado SSL");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Alteração de Senha");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Token/senha");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Cartão/senha");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Importação/Exportação");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Importação do Certificado A1");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Mozilla Firefox Import");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Pocket Import");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Exportação do Certificado A1");
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Repositório Windows");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Pocket export");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Mídia Bloqueada");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Token/bloqueado");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Cartão/bloqueado");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Certificado A3 Apagado");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Certificado Apagado");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Erro na Emissão (erro1)");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Erro(1) Revogação");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTree1.setRootVisible(false);
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/29.png"))); // NOI18N
        jButton1.setText("Copiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextPane1.setEditable(false);
        jTextPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Máscara de Atendimento"));
        jScrollPane3.setViewportView(jTextPane1);

        jLabel1.setText("Observação:");

        jLabelobs.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelobs.setForeground(new java.awt.Color(255, 0, 51));
        jLabelobs.setText("...");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelobs, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabelobs))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 866, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public String token() {
        String dados;
        dados = "CLIENTE COM DUVIDA NA INSTALAÇÃO DO DRIVER, FEITO ACESSO REMOTO\n"
                + "\nINSTADO DRIVER\n"
                + "\nCONFIGURADO DLL NO MOZILLA\n"
                + "\nTESTADO NO PORTAL E-CAC TUDO OK";
        return dados;
    }

    public String cartao() {
        String dados;
        dados = "CLIENTE COM DUVIDA NA INSTALAÇÃO DO DRIVER, FEITO ACESSO REMOTO\n"
                + "\nINSTADO DRIVER\n"
                + "\nCONFIGURADO DLL NO MOZILLA\n"
                + "\nTESTADO NO PORTAL E-CAC TUDO OK";
        return dados;
    }

    public String emissaoA1() {
        String dados;
        dados = "CLIENTE COM DUVIDA NA EMISSÃO DO CERTIFICADO A1, FEITO ACESSO REMOTO\n"
                + "\nREALIZADO A BAIXA"
                + "\nINSTALADO CERTIFICADO NA MAQUINA DEIXANDO A OPÇÃO DE EXPORTAÇÃO DA CHAVE."
                + "\nORIENTADO SOBRE O BACKUP\n"
                + "\nTESTADO NO PORTAL E-CAC TUDO OK";
        return dados;
    }

    public String emissaoA3() {
        String dados;
        dados = "CLIENTE COM DUVIDA NA EMISSÃO DO CERTIFICADO A3, FEITO ACESSO REMOTO\n"
                + "\nINSTALA O DRIVER"
                + "\nREALIZADO A BAIXA DO CERTIFICADO\n."
                + "\nTESTADO NO PORTAL E-CAC TUDO OK";
        return dados;
    }

    public String certificadoSSL() {
        String dados;
        dados = "CLIENTE COM DUVIDA NA EMISSÃO DO CERTIFICADO SSL, FEITO ACESSO REMOTO\n"
                + "\nAUXILIADO O CLIENTE O PROCESSO DE EMISSÃO";
        return dados;
    }

    public String alterarSenhaToken() {
        String dados;
        dados = "CLIENTE COM DUVIDA NA ALTERAÇÃO DA SENHA DE SUA MÍDIA, FEITO ACESSO REMOTO\n"
                + "\nREALIZADO O PROCEDIMENTO DE ALTERAÇÃO DA SENHA\n"
                + "\nFEITO O TESTE NO PORTAL E-CAC TUDO OK";
        return dados;
    }

    public String alterarSenhaCartao() {
        String dados;
        dados = "CLIENTE COM DUVIDA NA ALTERAÇÃO DA SENHA DE SUA MÍDIA, FEITO ACESSO REMOTO\n"
                + "\nREALIZADO O PROCEDIMENTO DE ALTERAÇÃO DA SENHA\n"
                + "\nFEITO O TESTE NO PORTAL E-CAC TUDO OK";
        return dados;
    }

    public String pocketImport() {
        String dados;
        dados = "CLIENTE COM DUVIDA NA IMPORTAÇÃO DO CERTIFICADO PARA O POCKET, FEITO ACESSO REMOTO\n"
                + "\nREALIZADO O PROCEDIMENTO DE IMPORTAÇÃO\n"
                + "\nFEITO O TESTE NO PORTAL E-ECAC TUDO NORMAL";
        return dados;
    }

    public String mozillaImport() {
        String dados;
        dados = "CLIENTE COM DUVIDA NA IMPORTAÇÃO DO CERTIFICADO PARA O MOZILLA FIREFOX, FEITO ACESSO REMOTO\n"
                + "\nREALIZADO O PROCEDIMENTO DE IMPORTAÇÃO\n"
                + "\nFEITO O TESTE NO PORTAL E-ECAC TUDO NORMAL";
        return dados;
    }

    public String exportRepositorioWindows() {
        String dados;
        dados = "CLIENTE COM DUVIDA NA EXPORTAÇÃO DO CERTIFICADO A1 DO REPOSITÓRIO DO WINDOWS, FEITO ACESSO REMOTO\n"
                + "\nREALIZADO O PROCEDIMENTO DE EXPORTAÇÃO\n"
                + "\nINSTALADO CERTIFICADO NA MAQUINA DEIXANDO A OPÇÃO DE EXPORTAÇÃO DA CHAVE."
                + "\nFEITO O TESTE NO PORTAL E-ECAC TUDO NORMAL";
        return dados;
    }

    public String exportPocket() {
        String dados;
        dados = "CLIENTE COM DUVIDA NA EXPORTAÇÃO DO CERTIFICADO A1 DO POCKET, FEITO ACESSO REMOTO\n"
                + "\nREALIZADO O PROCEDIMENTO DE EXPORTAÇÃO COM EXITO\n";
        return dados;
    }

    public String tokenCartaoBloqueado() {
        String dados;
        dados = "CLIENTE INFORMA QUE ESTA COM A MÍDIA BLOQUEADA, QUESTIONADO SE TINHA SENHA O ADMINISTRADOR (CAIXA DE CD), CLIENTE AFIRMA QUE SIM, FEITO ACESSO REMOTO.\n"
                + "\nREALIZADO O PROCEDIMENTO DE DESBLOQUEIO COM A SENHA INFORMADO PELO O CLIENTE\n"
                + "\nFEITO O TESTE NO PORTAL E-ECAC TUDO NORMAL";
        return dados;
    }

    public void eCopiarCampos(String frase) {
        Clipboard board = Toolkit.getDefaultToolkit().getSystemClipboard();
        ClipboardOwner selecao = new StringSelection(frase);
        board.setContents((Transferable) selecao, selecao);
    }
    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        String menu = jTree1.getLastSelectedPathComponent().toString();
        if (menu.equals("Cartão")) {
            jTextPane1.setText(cartao());
            jLabelobs.setText("NÃO ESQUEÇA DE COLOCAR O MODELO DO CARTÃO!!!");
        } else if (menu.equals("Token")) {
            jTextPane1.setText(token());
            jLabelobs.setText("NÃO ESQUEÇA DE COLOCAR O MODELO DO TOKEN!!!");
        } else if (menu.equals("Cliente A1")) {
            jTextPane1.setText(emissaoA1());
            jLabelobs.setText("NÃO ESQUEÇA DE INFORMA SOBRE O BACKUP!!!");
        } else if (menu.equals("Contabilidade")) {
            jTextPane1.setText(emissaoA1());
            jLabelobs.setText("NÃO ESQUEÇA DE INFORMA SOBRE O BACKUP!!!");
        } else if (menu.equals("Certificado SSL")) {
            jTextPane1.setText(certificadoSSL());
            jLabelobs.setText("A CONFIGURAÇÃO DO CERTIFICADO SSL É DE RESPONSABILIDADE DO CLIENTE!!!");
        } else if (menu.equals("Cliente A3")) {
            jTextPane1.setText(emissaoA3());
            jLabelobs.setText("SEMPRE REALIZE O TESTE DO CERTIFICADO!");
        } else if (menu.equals("Token/senha")) {
            jTextPane1.setText(alterarSenhaToken());
            jLabelobs.setText("NUNCA FORNEÇA A SENHA DO ADMINSTRADOR PARA O CLIENTE!");
        } else if (menu.equals("Cartão/senha")) {
            jTextPane1.setText(alterarSenhaCartao());
            jLabelobs.setText("NUNCA FORNEÇA A SENHA DO ADMINSTRADOR PARA O CLIENTE!");
        } else if (menu.equals("Mozilla Firefox Import")) {
            jTextPane1.setText(mozillaImport());
            jLabelobs.setText("NÃO ESQUEÇA DE COLOCAR O TIPO DO CERTIFICADO!");
        } else if (menu.equals("Pocket Import")) {
            jTextPane1.setText(pocketImport());
            jLabelobs.setText("NÃO ESQUEÇA DE COLOCAR O TIPO DO CERTIFICADO!");
        } else if (menu.equals("Pocket export")) {
            jTextPane1.setText(exportPocket());
            jLabelobs.setText("A EXPORTÇÃO DO É REALIZADO COM O CERTIFICADO A1!");
        } else if (menu.equals("Repositório Windows")) {
            jTextPane1.setText(exportRepositorioWindows());
            jLabelobs.setText("NÃO É POSSIVEL REALIZAR A EXPORTÇÃO DO CERTIFICADO A3!");
        } else if (menu.equals("Token/bloqueado")) {
            jTextPane1.setText(tokenCartaoBloqueado());
            jLabelobs.setText("NUNCA FORNEÇA A SENHA DO ADMINSTRADOR PARA O CLIENTE!");
        } else if (menu.equals("Cartão/bloqueado")) {
            jTextPane1.setText(tokenCartaoBloqueado());
            jLabelobs.setText("O CLIENTE TEM QUE INFORMA A SENHA DO ADMINISTRADOR PARA O DESBLOQUEIO!");
        } else if (menu.equals("Certificado Apagado")) {
            supsoluti.telaApagado frame = new supsoluti.telaApagado();
            frame.setVisible(true);
        } else if (menu.equals("Erro(1) Revogação")) {
            supsoluti.telaErro frame = new supsoluti.telaErro();
            frame.setVisible(true);
        }

    }//GEN-LAST:event_jTree1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        eCopiarCampos(jTextPane1.getText());
        JOptionPane.showMessageDialog(this, "Mascará Copiada!");
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelobs;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables

}
